services:
    # cURL client for Buzz
    buzz.client.file_get_contents:
        class:  Buzz\Client\FileGetContents
        public: false
        calls:
          - [setVerifyPeer, [false]]
    buzz.client.curl:
        class:  Buzz\Client\Curl
        public: false
        calls:
          - [setVerifyPeer, [false]]

    # Buzz browser
    buzz.browser:
        class:     Buzz\Browser
        arguments: ['@buzz.client.curl']

    ssl_encryption:
        class: Deeson\WardenBundle\Services\SSLEncryptionService
        arguments: [%public_key_file%, %private_key_file%]

    warden.drupal.module:
        class: Deeson\WardenBundle\Managers\ModuleManager
        arguments: [@doctrine_mongodb, @monolog.logger]

    warden.drupal.site:
        class: Deeson\WardenBundle\Services\WardenDrupalSiteService
        arguments: ['@warden.drupal.module', @ssl_encryption, '@buzz.browser', @monolog.logger]
        tags:
            - { name: kernel.event_listener, event: warden.site-update, method: onWardenSiteUpdate  }

    warden.drupal.module_version:
        class: Deeson\WardenBundle\Services\DrupalUpdateRequestService
        arguments: ['@buzz.browser', @monolog.logger]

    warden.site_manager:
        class: Deeson\WardenBundle\Managers\SiteManager
        arguments: [@doctrine_mongodb, @monolog.logger]

    site_have_issue_manager:
        class: Deeson\WardenBundle\Managers\SiteHaveIssueManager
        arguments: [@doctrine_mongodb, @monolog.logger]

    user_provider:
        class: Deeson\WardenBundle\Services\UserProviderService
        arguments: [%kernel.root_dir%]

    warden_setup:
        class: Deeson\WardenBundle\Services\WardenSetupService
        arguments: [%kernel.root_dir%]